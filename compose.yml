# NODE API FOR RESTAURANTS

services:
  db-init:
    build: .
    environment:
      - MONGO_USERNAME=${MONGO_USERNAME}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_DB=${MONGO_DB}
    depends_on:
      - mongo
    restart: on-failure
    command: npm run initdb
    networks:
      - node-mongo
    
  node-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: node-api
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      - db-init
      - mongo
    networks:
      - node-mongo
    environment:
      - MONGO_USERNAME=${MONGO_USERNAME}
      - MONGO_PASSWORD=${MONGO_PASSWORD}
      - MONGO_HOST=${MONGO_HOST}
      - MONGO_PORT=${MONGO_PORT}
      - MONGO_DB=${MONGO_DB}
      - TOKEN_SECRET=${TOKEN_SECRET}
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  mongo:
    command: mongod --quiet --logpath /dev/null
    image: mongo
    container_name: mongo-server
    ports:
      - "27017:27017"
    networks:
      - node-mongo
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
      - MONGO_INITDB_DATABASE=${MONGO_DB}
    volumes:
      - ./mongo-init/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro


networks:
  node-mongo:
    driver: bridge